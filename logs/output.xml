<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210213 13:38:06.003" rpa="false">
<suite id="s1" name="Play" source="c:\rfw\parodify\tests\play.robot">
<test id="s1-t1" name="Reproduzir a paródia Bug de Manhã">
<kw name="Open Login Page" library="auth">
<kw name="New Browser" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<arguments>
<arg>${browser}</arg>
<arg>${headless}</arg>
</arguments>
<msg timestamp="20210213 13:38:11.306" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210213 13:38:18.532" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210213 13:38:11.304" endtime="20210213 13:38:18.532"></status>
</kw>
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210213 13:38:30.834" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210213 13:38:18.532" endtime="20210213 13:38:30.835"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:11.302" endtime="20210213 13:38:30.836"></status>
</kw>
<kw name="Login With" library="auth">
<arguments>
<arg>papito@parodify.com</arg>
<arg>pwd123</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=input[name*=email]</arg>
<arg>${email_arg}</arg>
</arguments>
<msg timestamp="20210213 13:38:30.840" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210213 13:38:30.839" endtime="20210213 13:38:32.678"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${pass_arg}</arg>
</arguments>
<msg timestamp="20210213 13:38:32.680" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210213 13:38:32.679" endtime="20210213 13:38:32.761"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value="Log in"]</arg>
</arguments>
<status status="PASS" starttime="20210213 13:38:32.762" endtime="20210213 13:38:33.579"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:30.837" endtime="20210213 13:38:33.580"></status>
</kw>
<kw name="Logout Link Should Be visible" library="auth">
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${LOGOUT_LINK}</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 13:38:35.380" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210213 13:38:33.583" endtime="20210213 13:38:35.383"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:33.582" endtime="20210213 13:38:35.384"></status>
</kw>
<kw name="Go To Search Page" library="nav">
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=a[href*=search]</arg>
</arguments>
<status status="PASS" starttime="20210213 13:38:35.396" endtime="20210213 13:38:35.668"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Buscar")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 13:38:36.726" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Buscar")]</msg>
<status status="PASS" starttime="20210213 13:38:35.668" endtime="20210213 13:38:36.727"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:35.394" endtime="20210213 13:38:36.728"></status>
</kw>
<kw name="Go To Sertanejo Category" library="nav">
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//img[contains(@src, "sertanejo.png")]/..</arg>
</arguments>
<status status="PASS" starttime="20210213 13:38:36.730" endtime="20210213 13:38:37.267"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Sertanejo")]</arg>
</arguments>
<msg timestamp="20210213 13:38:37.746" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Sertanejo")]</msg>
<status status="PASS" starttime="20210213 13:38:37.268" endtime="20210213 13:38:37.747"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:36.729" endtime="20210213 13:38:37.748"></status>
</kw>
<kw name="Open Album From" library="nav">
<arguments>
<arg>Marcus e Debug</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//p[contains(text(), "${artist_name}")]/..</arg>
</arguments>
<status status="PASS" starttime="20210213 13:38:37.749" endtime="20210213 13:38:37.845"></status>
</kw>
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "Músicas")]</arg>
<arg>visible</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20210213 13:38:38.463" level="INFO">Wait for Element with selector: xpath=//h2[contains(text(), "Músicas")]</msg>
<status status="PASS" starttime="20210213 13:38:37.845" endtime="20210213 13:38:38.467"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:37.749" endtime="20210213 13:38:38.467"></status>
</kw>
<kw name="Play Song" library="song">
<arguments>
<arg>Bug de Manhã</arg>
</arguments>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "${song_name}")]/../..//div[contains(@class, "play")]//a</arg>
</arguments>
<status status="PASS" starttime="20210213 13:38:38.469" endtime="20210213 13:38:38.614"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:38.468" endtime="20210213 13:38:38.615"></status>
</kw>
<kw name="Song Should Be Playing" library="song">
<arguments>
<arg>Bug de Manhã</arg>
</arguments>
<kw name="Get Style" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Gets the computed style properties of the element selected by ``selector``.</doc>
<arguments>
<arg>xpath=//h2[contains(text(), "${song_name}")]/../../..</arg>
<arg>color</arg>
<arg>equal</arg>
<arg>rgb(225, 0, 180)</arg>
</arguments>
<msg timestamp="20210213 13:38:38.652" level="INFO">Value of key: color</msg>
<msg timestamp="20210213 13:38:38.653" level="INFO">Value of selected property: rgb(225, 0, 180)</msg>
<status status="PASS" starttime="20210213 13:38:38.617" endtime="20210213 13:38:38.653"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:38.616" endtime="20210213 13:38:38.653"></status>
</kw>
<status status="PASS" starttime="20210213 13:38:11.291" endtime="20210213 13:38:38.654" critical="yes"></status>
</test>
<doc>Testando o player de paródias</doc>
<status status="PASS" starttime="20210213 13:38:06.003" endtime="20210213 13:38:38.837"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Play">Play</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
